name: Build 
on: 
  push: 
      branch 
    : - master # o el nombre de sus 

trabajos de rama principal : 
  build: 
    name: Build se 
    ejecuta en: windows-últimos 
    pasos: 
      - nombre: configurar JDK 11 
        usos: actions / setup-java @ v1 
        con: 
          java-version: 1.11 
      - usos: actions / checkout @ v2 
        con: 
          fetch-depth: 0 # Los clones superficiales deben deshabilitarse para una mejor relevancia del análisis 
      - nombre: Cache Los paquetes de SonarQube 
        usan: actions / cache @ v1 
        con: 
          ruta: ~ \ sonar \ 
          clave de caché : $ {{runner.os}} - sonar
          restore-keys: $ {{runner.os}} - sonar 
      - nombre: Cache Id. del escáner SonarQube 
        : cache-sonar-scanner 
        usa: actions / cache @ v1 
        con: 
          ruta:. \. sonar \ escáner 
          clave: $ {{runner .os}} - 
          claves de restauración del escáner-sonar : $ {{runner.os}} - escáner-sonar 
      - nombre: Instale el escáner SonarQube 
        si: steps.cache-sonar-scanner.outputs.cache-hit! = 'true' 
        shell: powershell 
        ejecutar: | 
          New-Item -Path. \. Sonar \ scanner -ItemType Directory dotnet 
          tool update dotnet-sonarscanner --tool-path. \. Sonar \ scanner 
      - nombre: Construir y analizar 
        env:
          GITHUB_TOKEN: $ {{secrets.GITHUB_TOKEN}} # Necesario para obtener información de relaciones públicas, si hay alguna 
        shell: powershell 
        run: | 
          . \. sonar \ scanner \ dotnet-sonarscanner begin / k: "Farmacia" /d:sonar.login = "$ {{secrets.SONAR_TOKEN}}" /d:sonar.host.url = "$ {{secrets.SONAR_HOST_URL }} " 
          compilación de dotnet 
          . \. sonar \ scanner \ dotnet-sonarscanner end /d:sonar.login =" $ {{secrets.SONAR_TOKEN}} "
